@*add by hz full page*@
@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
}
@model VendorModel.AddVendorCustomerModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Catalog.Vendors.Customers.AddNew").Text;
}
@using Telerik.Web.Mvc.UI;
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
            @T("Admin.Catalog.Vendors.Customers.AddNew")
        </div>
    </div>    
    
    if (ViewBag.RefreshPage == true)
    {
        <script type="text/javascript">
            try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
            catch (e){} 
            window.close();
        </script>
    }

    
    <table width="100%">
        <tr>
            <td colspan="2">
                <span style="font-size:14px; font-weight:bold;">
                    @T("Admin.Catalog.Vendors.Customers.ShowVendorManagersOnly")
                </span>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchEmail)
            </td>
        </tr>
        @if (Model.UsernamesEnabled)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.SearchUsername):
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => Model.SearchUsername)
                </td>
            </tr>
        }
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchFirstName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchFirstName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchLastName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.SearchLastName)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-customers" class="t-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<CustomerModel>(Model.Customers.Data)
                    .Name("customers-grid")
                    .ClientEvents(events => events
                        .OnDataBinding("onDataBinding")
                        .OnDataBound("onDataBound"))
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Id)
                        .Template(
                                @<text>
                                    <input name="SelectedCustomerIds" type="checkbox" value="@item.Id " />
                                </text>
                        )
                        .ClientTemplate("<input type='checkbox' name='SelectedCustomerIds' value='<#= Id #>' />")
                        .Title(T("Admin.Common.Check").Text)
                        .Width(50);
                        //I don't know why but the customer list does not have an 'Edit' column in the grid on some machines (maybe because we are inside Html.BeginForm()).
                        //That's why the 'Email' column is clickable.
                        columns.Bound(x => x.Email)
                            .Width(150);
                        columns.Bound(x => x.Username)
                            .Width(150)
                            .Visible(Model.UsernamesEnabled);
                        columns.Bound(x => x.FullName)
                            .Width(200);
                        columns.Bound(x => x.CustomerRoleNames)
                            .Width(200);
                        columns.Bound(x => x.Active)
                            .Template(
                                @<img alt="" src="@Url.Content("~/Administration/Content/images/active-" + item.Active.ToString().ToLowerInvariant() + ".gif")" />
                            )
                            .ClientTemplate("<img alt='' src='" + Url.Content("~/Administration/Content/images/") + "active-<#= Active #>.gif' />")
                            .Centered()
                            .Width(100);
                        columns.Bound(x => x.CreatedOn)
                            .Width(100);
                        columns.Bound(x => x.LastActivityDate)
                            .Width(100);
                    })
                                            .Pageable(settings => settings.Total(Model.Customers.Total).PageSize(gridPageSize).Position(GridPagerPosition.Both))
                                            .DataBinding(dataBinding => dataBinding.Ajax().Select("CustomerAddPopupList", "Vendor"))
                                            .EnableCustomBinding(true))
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" name="save" class="t-button" value="@T("Admin.Common.Save")" />
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#search-customers').click(function () {
                var grid = $('#customers-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchEmail)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-customers").click();
                    return false;
                }
            });
            $("#@Html.FieldIdFor(model => model.SearchUsername)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-customers").click();
                    return false;
                }
            });
            $("#@Html.FieldIdFor(model => model.SearchFirstName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-customers").click();
                    return false;
                }
            });
            $("#@Html.FieldIdFor(model => model.SearchLastName)").keydown(function (event) {
                if (event.keyCode == 13) {
                    $("#search-customers").click();
                    return false;
                }
            });

        });

        function onDataBound(e) {          
        }

        function onDataBinding(e) {
           
            var searchModel = {
                SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val(),
                SearchUsername: $('#@Html.FieldIdFor(model => model.SearchUsername)').val(),
                SearchFirstName: $('#@Html.FieldIdFor(model => model.SearchFirstName)').val(),
                SearchLastName: $('#@Html.FieldIdFor(model => model.SearchLastName)').val(),
            };
            e.data = searchModel;
        }
    </script>
}