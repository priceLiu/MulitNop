@*add by hz full page*@
@model VendorListModel
@using Telerik.Web.Mvc.UI
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = T("Admin.Catalog.Vendors").Text;
}
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
        @T("Admin.Catalog.Vendors")
    </div>
    <div class="options">
        @if(!Model.IsVendorManager)
        {
            <a href="@Url.Action("Create")" class="t-button">@T("Admin.Common.AddNew")</a>
            <a href="@Url.Action("ExportXml")" class="t-button">@T("Admin.Common.ExportToXml")</a>
        }
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.SearchVendorName):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => Model.SearchVendorName)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="button" id="btnSearch" class="t-button" value="@T("Admin.Common.Search")" />
        </td>
    </tr>
</table>
<p></p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<VendorModel>(Model.Vendors.Data)
                    .Name("stores-grid")
                    .ClientEvents(events => events
                        .OnDataBinding("onDataBinding"))
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Name).Width(300);
                        columns.Bound(x => x.Published)
                            .Template(
                                @<img alt="" src="@Url.Content("~/Administration/Content/images/active-" + item.Published.ToString().ToLowerInvariant() + ".gif")" />
                            )
                            .ClientTemplate("<img alt='' src='" + Url.Content("~/Administration/Content/images/") + "active-<#= Published #>.gif' />")
                            .Centered()
                            .Width(100);
                        columns.Bound(x => x.DisplayOrder)
                            .Width(100)
                            .Centered();
                        columns.Bound(x => x.Id)
                            .Width(50)
                            .Centered()
                            .Template(x => Html.ActionLink(T("Admin.Common.Edit").Text, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\">" + T("Admin.Common.Edit").Text + "</a>")
                            .Title(T("Admin.Common.Edit").Text);
                    })
                                                .Pageable(settings => settings.Total(Model.Vendors.Total).PageSize(gridPageSize).Position(GridPagerPosition.Both))
                                                .DataBinding(dataBinding => dataBinding.Ajax().Select("List", "Vendor"))
                                                .EnableCustomBinding(true))
        </td>
    </tr>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        //search button
        $('#btnSearch').click(function () {
            //search
            var grid = $('#stores-grid').data('tGrid');
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });

        $("#@Html.FieldIdFor(model => model.SearchVendorName)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#btnSearch").click();
                return false;
            }
        });
    });

    function onDataBinding(e) {
        var searchModel = {
            SearchVendorName: $('#@Html.FieldIdFor(model => model.SearchVendorName)').val()
        };
        e.data = searchModel;
    }
</script>