@*add by hz full page*@
@model VendorModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var vendorUrl = Url.RouteUrl("Vendor", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(vendorUrl);
    }
}
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
<div class="page vendor-page">
    <div class="page-title">
        <h1>@Model.Name</h1>
    </div>
    <div class="clear">
    </div>
    <div class="page-body">
        @Html.Widget("vendordetails_top")
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="vendor-description">
                @Html.Raw(Model.Description)
            </div>
            <div class="clear">
            </div>
        }
        <div class="branch-grid">
        @if (Model.Branches.Count > 0)
        {
                <h2>@T("Vendors.Branches")</h2>
                foreach (var branch in Model.Branches)
                {
                    string ViewOnGoogleMaps = string.Format("http://maps.google.com/maps?f=q&hl=en&ie=UTF8&oe=UTF8&geocode=&q={0}", Server.UrlEncode(branch.Address1 + " " + branch.ZipPostalCode + " " + branch.City + " " + branch.CountryName));
                    <div class="item-box">
                        <div class="branch-item">
                            <h2 class="man-title">@branch.Name</h2>
                            <div class="branch-address">
                                @if (!string.IsNullOrEmpty(branch.Address1))
                                {@branch.Address1}
                                @if (!string.IsNullOrEmpty(branch.Address1) && !string.IsNullOrEmpty(branch.Address2))
                                {<text> </text>}
                                @if (!string.IsNullOrEmpty(branch.Address2))
                                {@branch.Address2}
                                @if (!string.IsNullOrEmpty(branch.Address1) || !string.IsNullOrEmpty(branch.Address2))
                                {<text>, </text>}
                                @if (!string.IsNullOrEmpty(branch.City))
                                {@branch.City}
                                <br />
                                @if (!string.IsNullOrEmpty(branch.CountryName))
                                {@branch.CountryName}
                                else{<br />}
                            </div>
                            <div class="branch-google-address">
                                @if (!string.IsNullOrEmpty(ViewOnGoogleMaps))
                                { 
                                    <a href="@Html.Raw(ViewOnGoogleMaps)" target="_blank">
                                        <img alt="@T("Vendors.Branches.ViewOnGoogleMaps")" src="@Url.Content("~/Administration/Content/images/google-maps.gif")" />
                                    </a>
                                }
                            </div>
                            <div class="clear"></div>
                            <div class="branch-phone">
                                @if (!string.IsNullOrEmpty(branch.PhoneNumber))
                                {<text><div class="title">@T("Vendors.Branches.Phone"):</div> </text>
                                        <div class="number">@branch.PhoneNumber</div>}
                                else{<br />}
                                <div class="clear"></div>
                            </div>
                            <div class="branch-phone">
                                 @if (!string.IsNullOrEmpty(branch.FaxNumber))
                                {<text><div class="title">@T("Vendors.Branches.Fax"):</div> </text>
                                        <div class="number">@branch.FaxNumber</div>}
                                else{<br />}
                                <div class="clear"></div>
                            </div>
                           <div class="branch-web">
                                @if (!string.IsNullOrEmpty(branch.Email))
                                {<a href = "mailto:@branch.Email" alt="@branch.Email" >@branch.Email </a>}
                               else{<br />}
                           </div>
                            <div class="branch-web">
                                @if (!string.IsNullOrEmpty(branch.Website))
                                {<a href = "http://@branch.Website" alt="@branch.Name" target="_blank" >@branch.Website </a>} 
                                else{<br />}   
                            </div>                                                                                 
                        </div>
                     </div>
                }
            <div class="clear"></div>
        }
        </div>
        @Html.Widget("vendordetails_before_featured_products")
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    @T("Products.FeaturedProducts")
                </div>
                <div>
                    @foreach (var product in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("~/views/catalog/_ProductBox.cshtml", product)
                        </div>
                    }
                </div>
            </div>
            <div class="clear">
            </div>
        }
        @Html.Widget("vendordetails_after_featured_products")
        @*view mode*@
        @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
        {
            <div class="product-viewmode">
                <span>@T("Categories.ViewMode")</span>
                @Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { onchange = "setLocation(this.value);" })
            </div>
        }
        @*sorting*@
        @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
        {
            <div class="product-sorting">
                <span>@T("Categories.OrderBy")</span>
                @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
            </div>
        }
    
        @*page size*@
        @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
        {
            <div class="product-page-size">
                <span>@T("Vendors.PageSize")</span> <span>@Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })</span>
                <span>@T("Vendors.PageSize.PerPage")</span>
            </div>
        }
        <div class="clear">
        </div>
        @Html.Widget("vendordetails_before_filters")
        @*filtering*@
        @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
        {
            @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            <div class="clear">
            </div>
        }
        @Html.Widget("vendordetails_before_product_list")
        @*product list*@
        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
            @*list mode*@
            <div class="product-list">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("~/views/catalog/_ProductBox.cshtml", product)
                    </div>
                }
            </div>
            }
            else
            {
            @*grid mode*@
            <div class="product-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                         @Html.Partial("~/views/catalog/_ProductBox.cshtml", product)
                     </div>
                }
            </div>
            }
        }
        <div class="clear">
        </div>
        <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        @Html.Widget("vendordetails_bottom")
    </div>
</div>
